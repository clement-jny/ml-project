# Define services
# script to train and run the model
# script to add new data to the model
# interface to interact with the model
services:
  model:
    image: python:3.12-slim
    volumes:
      - ./scripts:/scripts
    working_dir: /scripts
    tty: true
    command:
      - /bin/sh
      - -c
      - |
        apt-get update
        apt-get install -y
        apt-get install gcc python3-dev -y
        pip install -r requirements.txt
        python train.py

  # add-data:
  #   image: python:3.12-slim
  #   volumes:
  #     - ./scripts:/scripts
  #   working_dir: /scripts
  #   tty: true
  #   command:
  #     - /bin/sh
  #     - -c
  #     - |
  #       pip install -r requirements.txt
  #       python add.py

  # database:
  #   image: postgres:13.4
  #   environment:
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: password
  #     POSTGRES_DB: data
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - ./data:/var/lib/postgresql/data

  # adminer:
  #   image: adminer
  #   ports:
  #     - "8080:8080"

  # redis:
  #   image: redis:6.2.5
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - ./data:/data

  # Related to the web folder
  # web:
  #   image: node:16.11.1
  #   volumes:
  #     - .:/app
  #   working_dir: /app
  #   command: npm run dev

  # front:
  #   container_name: web-front
  #   image: node:16.11.1
  #   volumes:
  #     - ./front:/app
  #   working_dir: /app
  #   command: npm run dev

  # back:
  #   container_name: web-back
  #   image: node:16.11.1
  #   volumes:
  #     - ./back:/app
  #   working_dir: /app
  #   command: npm run dev

  # nginx:
  #   image: nginx:1.21.3
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - ./web:/usr/share/nginx/html
  #     - ./nginx.conf:/etc/nginx/nginx.conf

  # php:
  #   image: php:8.0.12-fpm
  #   volumes:
  #     - ./web:/var/www/html
  #   ports:
  #     - "9000:9000"
  #   working_dir: /var/www/html
  #   command: php -S 0.0.0.:9000

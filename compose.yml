services:
  # database to store the vectors of the dataset
  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.3
    env_file:
      - .env
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ELASTIC_PASSWORD=$ES_PASSWORD
    ports:
      - $ES_PORT:$ES_PORT
    volumes:
      - certs:/usr/share/elasticsearch/config/certs
      - esdata:/usr/share/elasticsearch/data
    networks:
      - esnet
    healthcheck:
      test: curl --fail $BASE_URL_ES || exit 1
      interval: 5s
      timeout: 5s
      retries: 120

  # script for running the model -> encode/decode datatset into vectors and store them in the database
  python:
    container_name: python
    image: python:3.12-slim
    env_file:
      - .env
    environment:
      - BASE_URL_ES=$BASE_URL_ES
      - ES_USER=$ES_USER
      - ES_PASSWORD=$ES_PASSWORD
    ports:
      - $PY_PORT:$PY_PORT
    volumes:
      - ./scripts:/scripts
    working_dir: /scripts # dir inside the container
    stdin_open: true
    tty: true
    command:
      - /bin/sh
      - -c
      - |
        pip install -r requirements.txt
        fastapi run main.py --port $PY_PORT
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - esnet

  # interface to interact with elastic and the model
  server:
    container_name: server
    image: php:8.3-apache
    env_file:
      - .env
    environment:
      - BASE_URL_PYTHON=$BASE_URL_PYTHON
    ports:
      - $SERVER_LOCAL_PORT:$SERVER_DOCKER_PORT
    volumes:
      - ./web:/var/www/html
    depends_on:
      # python:
      # condition: service_healthy
      elasticsearch:
        condition: service_healthy
    networks:
      - esnet

networks:
  esnet:
    driver: bridge

volumes:
  certs:
    driver: local
  esdata:
    driver: local
